Description: fix denial of service and possible code execution via
 incorrect buffer size
Origin: upstream, http://libexif.cvs.sourceforge.net/viewvc/libexif/libexif/libexif/exif-entry.c?r1=1.148&r2=1.149&view=patch
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/libexif/+bug/1024213
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=681454

Index: libexif-0.6.20/libexif/exif-entry.c
===================================================================
--- libexif-0.6.20.orig/libexif/exif-entry.c	2012-07-19 13:16:56.806149205 -0400
+++ libexif-0.6.20/libexif/exif-entry.c	2012-07-19 13:18:16.858151255 -0400
@@ -860,14 +860,15 @@
 	 */
 	bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
 
+	if (!e || !e->parent || !e->parent->parent || !maxlen)
+		return val;
+
 	/* make sure the returned string is zero terminated */
 	memset (val, 0, maxlen);
 	maxlen--;
 	memset (b, 0, sizeof (b));
 
 	/* We need the byte order */
-	if (!e || !e->parent || !e->parent->parent)
-		return val;
 	o = exif_data_get_byte_order (e->parent->parent);
 
 	/* Sanity check */
@@ -925,17 +926,16 @@
 
 		/*
 		 * If we reach this point, the tag does not
-		 * comply with the standard and seems to contain data.
+		 * comply with the standard but seems to contain data.
 		 * Print as much as possible.
 		 */
 		exif_entry_log (e, EXIF_LOG_CODE_DEBUG,
 			_("Tag UserComment does not comply "
 			"with standard but contains data."));
-		for (; (i < e->size)  && (strlen (val) < maxlen - 1); i++) {
+		for (j = 0; (i < e->size) && (j < maxlen); i++, j++) {
 			exif_entry_log (e, EXIF_LOG_CODE_DEBUG,
 				_("Byte at position %i: 0x%02x"), i, e->data[i]);
-			val[strlen (val)] =
-				isprint (e->data[i]) ? e->data[i] : '.';
+ 			val[j] = isprint (e->data[i]) ? e->data[i] : '.';
 		}
 		break;
 
